@model PaginatedList<Child>

@{
    ViewData["Title"] = "Index";
}

<h1>Children</h1>
@if (User.IsInRole("Admin"))
{
    <p>
        <a asp-action="Create">Add child</a>
    </p>
}

<form asp-action="Index" method="get">
    <div class="form-actions no-color">
        <p>
            Find by name: <input type="text" name="SearchString" value="@ViewData["CurrentFilter"]" />
            <select id="classId" name="classId">
                <option value="">All Groups</option>
                @foreach (var c in (IEnumerable<Class>)ViewData["Classes"])
                {
                    <option value="@c.ClassID" selected="@((int?)ViewData["SelectedClass"] == c.ClassID)">
                        @c.ClassName
                    </option>
                }

            </select>
            <input type="submit" value="Search" class="btn btn-default" /> |
            <a asp-action="Index">Back to Full List</a>
        </p>
    </div>
</form>

<table class="table">
    <thead>
        <tr>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["NameSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Name</a>
            </th>
            <th>
                Birth Date
            </th>
            <th>
                Contact phone
            </th>
            <th>
                Group
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.FullName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.DateOfBirth)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ParentContact)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Class.ClassName)
            </td>
            @if (User.IsInRole("Admin"))
            {
                <td>
                    <a asp-action="Edit" asp-route-id="@item.ChildID">Edit</a> |
                    <a asp-action="Delete" asp-route-id="@item.ChildID">Delete</a>
                </td>
            }
               
        </tr>
}
    </tbody>
</table>

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
    var classIdParam = ViewData["SelectedClass"];

}
<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex - 1)"
   asp-route-classId="@classIdParam"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @prevDisabled">
    Previous
</a>
<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex + 1)"
   asp-route-classId="@classIdParam"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @nextDisabled">
    Next
</a>
